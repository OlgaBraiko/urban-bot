import { useState } from 'react';
import { Route, Router, Text, ButtonGroup, Button, useText, Image, Dialog, DialogStep } from '@urban-bot/core';
import fs from 'fs';
import logo from './assets/logo.png';

const file = fs.readFileSync(logo);

function Echo() {
    const [text, setText] = useState('–ü—Ä–∏–≤–µ—Ç!');

    useText(({ text }) => {
        setText(text);
    });

    return (
        <Text>
            <i>{text}</i>
        </Text>
    );
}

function Logo() {
    const [title, setTitle] = useState('Urban Bot');

    const addRobot = () => {
        setTitle(title + 'ü§ñ');
    };

    return (
        <Image
            title={title}
            file={file}
            buttons={
                <ButtonGroup>
                    <Button onClick={addRobot}>Add robot</Button>
                </ButtonGroup>
            }
        />
    );
}

function FlatDialogExample() {
    return (
        <Dialog onFinish={(answers) => console.log(answers)}>
            <DialogStep content={<Text>–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?</Text>} id="name" onNext={(name) => console.log(name)}>
                <DialogStep content={<Text>C–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?</Text>} id="age" onNext={(age) => console.log(age)}>
                    <DialogStep content={<Text>–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?</Text>} id="city" />
                </DialogStep>
            </DialogStep>
        </Dialog>
    );
}

export const TreeDialog = () => {
    return (
        <Dialog>
            <DialogStep
                content={
                    <ButtonGroup title={'–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Ö–æ—á–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å?'}>
                        <Button id="hat">–§—É—Ç–±–æ–ª–∫–∞</Button>
                        <Button id="glasses">–û—á–∫–∏</Button>
                        <Button id="bag">–°—É–º–∫–∞</Button>
                    </ButtonGroup>
                }
            >
                <DialogStep
                    match="hat"
                    content={
                        <ButtonGroup title="–ö–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä —Ç–≤–æ–µ–π —Ñ—É—Ç–±–æ–ª–∫–∏?">
                            <Button id="s">S</Button>
                            <Button id="m">M</Button>
                            <Button id="l">L</Button>
                        </ButtonGroup>
                    }
                />
                <DialogStep
                    match="glasses"
                    content={
                        <ButtonGroup title="–ö–∞–∫–æ–≥–æ —Ü–≤–µ—Ç–∞ –æ—á–∫–∏?">
                            <Button id="–ß–µ—Ä–Ω—ã–π">–ß–µ—Ä–Ω—ã–π</Button>
                            <Button id="–ñ–µ–ª—Ç—ã–π">–ñ–µ–ª—Ç—ã–π</Button>
                            <Button id="–†–æ–∑–æ–≤—ã–π">–†–æ–∑–æ–≤—ã–π</Button>
                        </ButtonGroup>
                    }
                />
                <DialogStep
                    match="bag"
                    content={
                        <ButtonGroup title="–ö–∞–∫–æ–π —Ü–≤–µ—Ç —Å—É–º–∫–∏?">
                            <Button id="–ß–µ—Ä–Ω—ã–π">–ß–µ—Ä–Ω–∞—è</Button>
                            <Button id="–ñ–µ–ª—Ç—ã–π">–ñ–µ–ª—Ç–∞—è</Button>
                            <Button id="–†–æ–∑–æ–≤—ã–π">–†–æ–∑–æ–≤–∞—è</Button>
                        </ButtonGroup>
                    }
                />
            </DialogStep>
        </Dialog>
    );
};

export const Counter = () => {
    const [counter, setCounter] = useState(0);

    const increment = () => setCounter(counter + 1);
    const decrement = () => setCounter(counter - 1);

    return (
        <ButtonGroup title={counter} isNewMessageEveryRender={false}>
            <Button onClick={increment}>+1</Button>
            <Button onClick={decrement}>-1</Button>
        </ButtonGroup>
    );
};

export function App() {
    return (
        <>
            {/* <Text>–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥!</Text> */}
            {/* <Echo /> */}
            {/* <Counter /> */}
            {/* <FlatDialogExample /> */}
            <TreeDialog />

            <Router>
                <Route path="/echo">
                    <Echo />
                </Route>
                <Route path="/logo">
                    <Logo />
                </Route>
            </Router>
        </>
    );
}
